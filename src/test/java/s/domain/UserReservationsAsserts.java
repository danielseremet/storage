package s.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserReservationsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReservationsAllPropertiesEquals(UserReservations expected, UserReservations actual) {
        assertUserReservationsAutoGeneratedPropertiesEquals(expected, actual);
        assertUserReservationsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReservationsAllUpdatablePropertiesEquals(UserReservations expected, UserReservations actual) {
        assertUserReservationsUpdatableFieldsEquals(expected, actual);
        assertUserReservationsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReservationsAutoGeneratedPropertiesEquals(UserReservations expected, UserReservations actual) {
        assertThat(actual)
            .as("Verify UserReservations auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReservationsUpdatableFieldsEquals(UserReservations expected, UserReservations actual) {
        assertThat(actual)
            .as("Verify UserReservations relevant properties")
            .satisfies(a -> assertThat(a.getTotalSize()).as("check totalSize").isEqualTo(expected.getTotalSize()))
            .satisfies(a -> assertThat(a.getUsedSize()).as("check usedSize").isEqualTo(expected.getUsedSize()))
            .satisfies(a -> assertThat(a.getActivated()).as("check activated").isEqualTo(expected.getActivated()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReservationsUpdatableRelationshipsEquals(UserReservations expected, UserReservations actual) {
        // empty method
    }
}
