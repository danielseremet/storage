package s.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StorageFileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageFileAllPropertiesEquals(StorageFile expected, StorageFile actual) {
        assertStorageFileAutoGeneratedPropertiesEquals(expected, actual);
        assertStorageFileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageFileAllUpdatablePropertiesEquals(StorageFile expected, StorageFile actual) {
        assertStorageFileUpdatableFieldsEquals(expected, actual);
        assertStorageFileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageFileAutoGeneratedPropertiesEquals(StorageFile expected, StorageFile actual) {
        assertThat(actual)
            .as("Verify StorageFile auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageFileUpdatableFieldsEquals(StorageFile expected, StorageFile actual) {
        assertThat(actual)
            .as("Verify StorageFile relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getSize()).as("check size").isEqualTo(expected.getSize()))
            .satisfies(a -> assertThat(a.getMimeType()).as("check mimeType").isEqualTo(expected.getMimeType()))
            .satisfies(a -> assertThat(a.getPath()).as("check path").isEqualTo(expected.getPath()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageFileUpdatableRelationshipsEquals(StorageFile expected, StorageFile actual) {
        // empty method
    }
}
